// ROBOCON18
#define pinA    2
#define pinB    3
#define button1 5
#define button2 6
#define button3 7
#define dir     8
#define spd     9

int channelA;   
int channelB;
int rise_count=0;
int rotated_angle=0;
int buttonState1=0;
int buttonState2=0;
int buttonState3=0;
int desire_angle=0;
int prevButState1=0;
int prevButState2=0;
int prevButState3=0;
int pwm_val=0;
float Kp1=0.3;
float Kp2=0.5;
float Kp3=0.8;
int angle1=1590;
int angle2=720;
int angle3=1100;
bool flag1=0;
bool flag2=0;
bool flag3=0;
//float Kd=2;



void setup() {
Serial.begin(9600);
pinMode(dir,OUTPUT);
pinMode(spd,OUTPUT);
pinMode(button1,INPUT);
pinMode(button2,INPUT);
pinMode(button3,INPUT);
pinMode(pinA,INPUT);
pinMode(pinB,INPUT);
attachInterrupt(digitalPinToInterrupt(pinA),rencoder,RISING);   
}

void loop() {
buttonState1=digitalRead(button1);
buttonState2=digitalRead(button2);
buttonState3=digitalRead(button3);
channelA=digitalRead(pinA);
channelB=digitalRead(pinB);
rotated_angle=rise_count*1.44;         //1rev=250rises,hence 1rise=1.5degree

if((buttonState1)&&(!prevButState1)&&(!buttonState2)&&(!buttonState3)) {
  desire_angle=rotated_angle+angle1;
  flag1=1;
}
else if((buttonState2)&&(!prevButState2)&&(!buttonState1)&&(!buttonState3)) {
  desire_angle=rotated_angle+angle2;
  flag2=1;
}
else if((buttonState3)&&(!prevButState3)&&(!buttonState1)&&(!buttonState2)) {
  desire_angle=rotated_angle+angle3;
  flag3=1;
}
prevButState1=buttonState1;
prevButState2=buttonState2;
prevButState3=buttonState3;

  if(rotated_angle<desire_angle){
    if(flag1){
    pwm_val=TZ1Pid(desire_angle,rotated_angle); 
  }else if (flag2){
    pwm_val=TZ2Pid(desire_angle,rotated_angle); 
  }else if (flag3){
    pwm_val=TZ3Pid(desire_angle,rotated_angle); 
  }
  }else {
    pwm_val=0;
    flag1=0;
    flag2=0;
    flag3=0;
  }

digitalWrite(dir,HIGH);
analogWrite(spd,pwm_val); 
  
//Serial.print("Rise Count=");
//Serial.print(rise_count);
//Serial.print('\t');
Serial.print("Desire Angle=");
Serial.print(desire_angle);
Serial.print('\t');
Serial.print("Rotated Angle=");
Serial.print(rotated_angle);
Serial.print('\t');
Serial.print("PWMVal=");
Serial.println(pwm_val);
}

void rencoder(){
  rise_count++;
}

int TZ1Pid(int targetAngle, int currentAngle){
float pidTerm=0;
int error=0;
static int last_error=0;
error=targetAngle-currentAngle;
pidTerm=Kp1*error;
last_error=error;
Serial.println("TZ1Pid is IN");
Serial.print("pidTerm=");
Serial.println(pidTerm);
return constrain(pidTerm,70,90);
}

int TZ2Pid(int targetAngle, int currentAngle){
float pidTerm=0;
int error=0;
static int last_error=0;
error=targetAngle-currentAngle;
pidTerm=Kp2*error;
last_error=error;
Serial.println("TZ2Pid is IN");
Serial.print("pidTerm=");
Serial.println(pidTerm);
return constrain(pidTerm,90,110);
}

int TZ3Pid(int targetAngle, int currentAngle){
float pidTerm=0;
int error=0;
static int last_error=0;
error=targetAngle-currentAngle;
pidTerm=Kp3*error;
last_error=error;
Serial.println("TZ3Pid is IN");
Serial.print("pidTerm=");
Serial.println(pidTerm);
return constrain(pidTerm,110,130);
}